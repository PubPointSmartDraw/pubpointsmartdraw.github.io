{"ast":null,"code":"import _classCallCheck from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/specific-components/AnimationPlayer.js\";\n\n/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Stage, Layer, Rect, Group, Text } from 'react-konva';\nimport { Spring, animated, Keyframes, config } from 'react-spring/dist/konva';\nimport html2canvas from 'html2canvas';\nimport delay from 'delay';\nimport { SCREEN_PARAMETERS } from '../Constants';\nimport BaseCanvasKonvaAnimatedObject from './BaseCanvasKonvaAnimatedObject';\nimport BaseCanvasKonvaImage from './BaseCanvasKonvaImage';\nimport play from '../../images/icons/play.png';\nimport stop from '../../images/icons/stop.png';\nimport pause from '../../images/icons/pause.png';\nimport signature from '../../images/signature-small.png';\n/**\n* Composant responsable de la prévisualisation de la vidéo d'animation\n*/\n\nvar AnimationPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimationPlayer, _Component);\n\n  /**\n  * Variable d'état du composant\n  */\n\n  /**\n  * Constructeur du composant.\n  * @constructor\n  */\n  function AnimationPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, AnimationPlayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimationPlayer).call(this, props));\n    _this.state = {\n      completed: 0,\n      animationWindowWidth: 20,\n      animationWindowHeight: 20,\n      creationBoardWidth: 20,\n      creationBoardHeight: 20,\n      sprite: null,\n      currentVideoProcessComplete: true\n    };\n\n    _this.initScreenDimensions = function () {\n      var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n          h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      var finalWidth = w * 0.7,\n          finalHeight = finalWidth / SCREEN_PARAMETERS.ASPECTRATION;\n\n      _this.setState({\n        animationWindowWidth: finalWidth,\n        animationWindowHeight: finalHeight,\n        creationBoardWidth: w * SCREEN_PARAMETERS.WIDTHPROPORTION,\n        creationBoardHeight: h * SCREEN_PARAMETERS.HEIGHTPROPORTION\n      });\n    };\n\n    _this.send = function () {\n      _this.setState({\n        currentVideoProcessComplete: false\n      });\n\n      var size = _this.images.length;\n      var data = 'data=' + JSON.stringify(_this.images) + '&title=' + _this.props.projectName + '&email=tca1audricfeuyan@gmail.com';\n      console.log(\"Envoie de images en ligne\");\n      return fetch(\"http://imagebr.000webhostapp.com/uploadImages.php\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: data\n      }).then(function (response) {\n        if (response.ok) {\n          _this.setState({\n            currentVideoProcessComplete: true\n          });\n\n          return response.json();\n        } else {\n          _this.setState({\n            currentVideoProcessComplete: true\n          });\n\n          return response.json();\n        }\n      }).then(function (responseData) {\n        if (responseData.success) {\n          console.log(\"Video générée avec succès.\");\n        } else {\n          console.log(\"Un problème est survenue pendant la génération de la vidéo.\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.captureAnimationFrame = function () {\n      var canvas = _this.stageAnimation.current.getStage().toCanvas();\n\n      var image = canvas.toDataURL(\"image/jpeg\", 1);\n\n      _this.images.push(encodeURIComponent(image)); //console.log(\"Ajout\");\n\n    };\n\n    _this.state = {\n      completed: 0,\n      animationWindowWidth: 20,\n      animationWindowHeight: 20,\n      creationBoardWidth: 20,\n      creationBoardHeight: 20,\n      sprite: null,\n      currentVideoProcessComplete: true\n    };\n    _this.timer = null;\n    _this.counter = 1;\n    _this.images = [];\n    _this.savedCaptures = [];\n    _this.stageAnimation = React.createRef();\n    return _this;\n  }\n  /**\n  * Fonction de la phase \"pré-montage\" du cycle de vie du composant.\n  */\n\n\n  _createClass(AnimationPlayer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.initScreenDimensions();\n    }\n    /*shouldComponentUpdate(nextProps, nextState){\n      if(nextProps.canDownloadAnimationVideo){\n        if(this.canDownload){\n          this.canDownload = false;\n          this.send();\n        }\n        return false;\n      }\n      return true;\n    }*/\n\n    /**\n    * Fonction d'initialisation des variable de stockage des dimensions de l'écran et des fenêtre de l'interface.\n    */\n\n  }, {\n    key: \"render\",\n\n    /**\n    * Affiche les éléments d'interface du composant.\n    */\n    value: function render() {\n      var _this2 = this;\n\n      var windowWidth = this.state.animationWindowWidth;\n      var windowHeight = this.state.animationWindowHeight;\n      var creationBoardWidth = this.state.creationBoardWidth;\n      var creationBoardHeight = this.state.creationBoardHeight; //console.log(this.props.objectList);\n\n      var animatedObjects = this.props.objectList.filter(function (item) {\n        return item.type !== \"landscape\";\n      });\n      var landscape = this.props.objectList.filter(function (item) {\n        return item.type === \"landscape\";\n      });\n      var objectListSize = animatedObjects.length + 1;\n\n      if (landscape.length !== 0) {\n        landscape[0].width = creationBoardWidth;\n        landscape[0].height = creationBoardHeight;\n      }\n\n      return React.createElement(Paper, {\n        id: \"screen-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Stage, {\n        width: windowWidth,\n        height: windowHeight,\n        className: \"Background-white\",\n        ref: this.stageAnimation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Rect, {\n        x: 0,\n        y: 0,\n        width: windowWidth,\n        height: windowHeight,\n        fill: this.props.backgroundSceneColor,\n        shadowBlur: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, landscape.map(function (item, index) {\n        return React.createElement(BaseCanvasKonvaAnimatedObject, {\n          animatedObject: item,\n          key: index,\n          objectIndex: index,\n          type: item.type,\n          windowWidth: windowWidth,\n          windowHeight: windowHeight,\n          creationBoardWidth: creationBoardWidth,\n          creationBoardHeight: creationBoardHeight,\n          captureFrameCallback: _this2.captureAnimationFrame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        });\n      }), animatedObjects.map(function (item, index) {\n        return React.createElement(BaseCanvasKonvaAnimatedObject, {\n          animatedObject: item,\n          key: index + 1,\n          objectIndex: index + 1,\n          type: item.type,\n          windowWidth: windowWidth,\n          windowHeight: windowHeight,\n          creationBoardWidth: creationBoardWidth,\n          creationBoardHeight: creationBoardHeight,\n          captureFrameCallback: _this2.captureAnimationFrame,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        });\n      })), React.createElement(BaseCanvasKonvaImage, {\n        imageSrc: signature,\n        type: \"signature\",\n        assetIndex: 10000,\n        onAssetClicked: function onAssetClicked(e) {},\n        onPositionChange: function onPositionChange(e) {},\n        onTransformChange: function onTransformChange(e) {},\n        x: this.state.animationWindowWidth - 100,\n        y: this.state.animationWindowHeight - 50,\n        width: 80,\n        height: 34,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AnimationPlayer;\n}(Component);\n\nexport default AnimationPlayer;","map":{"version":3,"sources":["/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/specific-components/AnimationPlayer.js"],"names":["React","Component","Toolbar","Tooltip","Avatar","Paper","LinearProgress","Stage","Layer","Rect","Group","Text","Spring","animated","Keyframes","config","html2canvas","delay","SCREEN_PARAMETERS","BaseCanvasKonvaAnimatedObject","BaseCanvasKonvaImage","play","stop","pause","signature","AnimationPlayer","props","state","completed","animationWindowWidth","animationWindowHeight","creationBoardWidth","creationBoardHeight","sprite","currentVideoProcessComplete","initScreenDimensions","w","window","innerWidth","document","documentElement","clientWidth","body","h","innerHeight","clientHeight","finalWidth","finalHeight","ASPECTRATION","setState","WIDTHPROPORTION","HEIGHTPROPORTION","send","size","images","length","data","JSON","stringify","projectName","console","log","fetch","method","headers","then","response","ok","json","responseData","success","catch","err","captureAnimationFrame","canvas","stageAnimation","current","getStage","toCanvas","image","toDataURL","push","encodeURIComponent","timer","counter","savedCaptures","createRef","windowWidth","windowHeight","animatedObjects","objectList","filter","item","type","landscape","objectListSize","width","height","backgroundSceneColor","map","index","e"],"mappings":"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","sourcesContent":["/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Stage, Layer, Rect, Group, Text } from 'react-konva';\nimport { Spring, animated, Keyframes, config } from 'react-spring/dist/konva';\nimport html2canvas from 'html2canvas';\nimport delay from 'delay';\nimport {SCREEN_PARAMETERS} from '../Constants';\n\nimport BaseCanvasKonvaAnimatedObject from './BaseCanvasKonvaAnimatedObject';\nimport BaseCanvasKonvaImage from './BaseCanvasKonvaImage';\n\nimport play from '../../images/icons/play.png';\nimport stop from '../../images/icons/stop.png';\nimport pause from '../../images/icons/pause.png';\nimport signature from '../../images/signature-small.png';\n\n\n/**\n* Composant responsable de la prévisualisation de la vidéo d'animation\n*/\nclass AnimationPlayer extends Component {\n  /**\n  * Variable d'état du composant\n  */\n  state = {\n    completed: 0,\n    animationWindowWidth : 20,\n    animationWindowHeight : 20,\n    creationBoardWidth : 20,\n    creationBoardHeight : 20,\n    sprite : null,\n    currentVideoProcessComplete: true,\n  };\n  /**\n  * Constructeur du composant.\n  * @constructor\n  */\n  constructor(props){\n    super(props);\n    this.state = {\n      completed: 0,\n      animationWindowWidth : 20,\n      animationWindowHeight : 20,\n      creationBoardWidth : 20,\n      creationBoardHeight : 20,\n      sprite : null,\n      currentVideoProcessComplete: true,\n    };\n    this.timer = null;\n    this.counter = 1;\n    this.images = [];\n    this.savedCaptures = [];\n    this.stageAnimation = React.createRef();\n  }\n  /**\n  * Fonction de la phase \"pré-montage\" du cycle de vie du composant.\n  */\n  componentWillMount(){\n    this.initScreenDimensions();\n  }\n\n  /*shouldComponentUpdate(nextProps, nextState){\n    if(nextProps.canDownloadAnimationVideo){\n      if(this.canDownload){\n        this.canDownload = false;\n        this.send();\n      }\n      return false;\n    }\n    return true;\n  }*/\n  /**\n  * Fonction d'initialisation des variable de stockage des dimensions de l'écran et des fenêtre de l'interface.\n  */\n  initScreenDimensions = () => {\n    var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n        h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    var finalWidth = w*0.7,\n        finalHeight = finalWidth/SCREEN_PARAMETERS.ASPECTRATION;\n    this.setState({\n      animationWindowWidth : finalWidth,\n      animationWindowHeight : finalHeight,\n      creationBoardWidth : w * SCREEN_PARAMETERS.WIDTHPROPORTION,\n      creationBoardHeight : h * SCREEN_PARAMETERS.HEIGHTPROPORTION,\n    });\n  };\n  /**\n  * Fonction responsable de l'envoie du vecteur d'images de capture de l'animation au serveur de compilation de la vidéo.\n  */\n  send = () => {\n    this.setState({ currentVideoProcessComplete:false });\n    var size = this.images.length;\n    var data = 'data=' + JSON.stringify(this.images) + '&title=' + this.props.projectName+ '&email=tca1audricfeuyan@gmail.com';\n    console.log(\"Envoie de images en ligne\");\n    return fetch(\"http://imagebr.000webhostapp.com/uploadImages.php\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: data,\n      })\n    .then(response => {\n      if(response.ok){\n        this.setState({ currentVideoProcessComplete:true });\n        return response.json();\n      }else{\n        this.setState({ currentVideoProcessComplete:true });\n        return response.json();\n      }\n    })\n    .then(responseData => {\n      if(responseData.success){\n        console.log(\"Video générée avec succès.\")\n      }else{\n        console.log(\"Un problème est survenue pendant la génération de la vidéo.\")\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  /**\n  * Fonction responsable de la capture et du stockage d'une Frame de l'animation au format image JPEG.\n  */\n  captureAnimationFrame = () => {\n    var canvas = this.stageAnimation.current.getStage().toCanvas();\n    var image = canvas.toDataURL(\"image/jpeg\", 1);\n    this.images.push(encodeURIComponent(image));\n    //console.log(\"Ajout\");\n  };\n\n  /**\n  * Affiche les éléments d'interface du composant.\n  */\n  render() {\n    const windowWidth = this.state.animationWindowWidth;\n    const windowHeight = this.state.animationWindowHeight;\n    const creationBoardWidth = this.state.creationBoardWidth;\n    const creationBoardHeight = this.state.creationBoardHeight;\n\n    //console.log(this.props.objectList);\n\n    let animatedObjects = this.props.objectList.filter(item => item.type !== \"landscape\");\n    let landscape = this.props.objectList.filter(item => item.type === \"landscape\");\n    let objectListSize = animatedObjects.length + 1;\n\n    if(landscape.length !== 0){\n      landscape[0].width = creationBoardWidth;\n      landscape[0].height = creationBoardHeight;\n    }\n\n\n    return (\n      <Paper id=\"screen-board\">\n        <Stage width={windowWidth} height={windowHeight} className=\"Background-white\" ref={this.stageAnimation}>\n          <Layer>\n            <Rect\n             x={0}\n             y={0}\n             width={windowWidth}\n             height={windowHeight}\n             fill={this.props.backgroundSceneColor}\n             shadowBlur={0}\n           />\n           <Group>\n            {\n              landscape.map( (item, index) => (\n                <BaseCanvasKonvaAnimatedObject animatedObject={item} key={index}\n                                               objectIndex={index}\n                                               type={item.type}\n                                               windowWidth={windowWidth}\n                                               windowHeight={windowHeight}\n                                               creationBoardWidth={creationBoardWidth}\n                                               creationBoardHeight={creationBoardHeight}\n                                               captureFrameCallback={this.captureAnimationFrame}/>\n              ))\n            }\n            {\n              animatedObjects.map( (item, index) => (\n                <BaseCanvasKonvaAnimatedObject animatedObject={item} key={index+1}\n                                               objectIndex={index+1}\n                                               type={item.type}\n                                               windowWidth={windowWidth}\n                                               windowHeight={windowHeight}\n                                               creationBoardWidth={creationBoardWidth}\n                                               creationBoardHeight={creationBoardHeight}\n                                               captureFrameCallback={this.captureAnimationFrame}/>\n              ))\n            }\n            </Group>\n\n            <BaseCanvasKonvaImage  imageSrc={signature}\n                                   type={\"signature\"}\n                                   assetIndex={10000}\n                                   onAssetClicked={(e) => {}}\n                                   onPositionChange={(e) => {}}\n                                   onTransformChange={(e) => {}}\n                                   x={this.state.animationWindowWidth-100}\n                                   y={this.state.animationWindowHeight-50}\n                                   width={80}\n                                   height={34}/>\n          </Layer>\n        </Stage>\n\n\n\n      </Paper>\n    );\n  }\n}\n\nexport default AnimationPlayer;\n"]},"metadata":{},"sourceType":"module"}