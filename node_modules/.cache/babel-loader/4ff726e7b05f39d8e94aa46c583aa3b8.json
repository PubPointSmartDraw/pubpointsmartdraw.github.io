{"ast":null,"code":"import _defineProperty from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/specific-components/CreationBoard.js\";\n\n/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Stage, Layer, Text, Group, Image, Line, Rect, Circle, Ellipse, RegularPolygon } from 'react-konva';\nimport { SCREEN_PARAMETERS, GEOMETRIC_FORMS } from '../Constants';\nimport Konva from 'konva';\nimport BaseCanvasKonvaImage from './BaseCanvasKonvaImage';\nimport BaseCanvasKonvaAnimatedObject from './BaseCanvasKonvaAnimatedObject';\nimport TransformerComponent from './TransformerComponent';\nimport ObjectLoader from './ObjectLoader';\nimport img1 from '../../images/animationTools/scenes/1.jpg';\nimport img2 from '../../images/animationTools/characters/gif.gif';\nimport img3 from '../../images/animationTools/characters/canvas.png';\nvar imageWidthHeightRatio = 0.707;\nvar TRANSFORM_CHANGE = \"Transform-change\";\nvar POSITION_CHANGE = \"Position-change\";\nvar stageSnapshot = null;\n\nvar CreationBoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreationBoard, _Component);\n\n  function CreationBoard(props) {\n    var _this;\n\n    _classCallCheck(this, CreationBoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreationBoard).call(this, props));\n\n    _this.updateScreenDimensions = function () {\n      var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n          h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n          ch = h * SCREEN_PARAMETERS.WIDTHPROPORTION,\n          cw = w * SCREEN_PARAMETERS.HEIGHTPROPORTION;\n\n      _this.setState({\n        windowWidth: w,\n        windowHeight: h,\n        creationBoardHeight: ch,\n        creationBoardWidth: cw\n      });\n    };\n\n    _this.handleDragStart = function (e) {\n      e.target.setAttrs({\n        scaleX: 1.1,\n        scaleY: 1.1\n      });\n    };\n\n    _this.handleDragEnd = function (e) {\n      e.target.to({\n        duration: 0.5,\n        easing: Konva.Easings.ElasticEaseOut,\n        scaleX: 1,\n        scaleY: 1,\n        shadowOffsetX: 5,\n        shadowOffsetY: 5\n      });\n\n      _this.setState({\n        x: e.target.x(),\n        y: e.target.y()\n      });\n    };\n\n    _this.handleAssetsPositionChange = function (index, newProps) {\n      _this.props.onAssetUpdated(index, newProps, POSITION_CHANGE);\n\n      _this.setState({\n        touched: true\n      });\n    };\n\n    _this.handleAssetsTransformChange = function (index, newProps) {\n      _this.props.onAssetUpdated(index, newProps, TRANSFORM_CHANGE);\n    };\n\n    _this.handleStageMouseDown = function (e) {\n      var sceneSnapshot = e.target.getStage().toDataURL();\n\n      _this.props.onSceneUpdated({\n        snapshot: sceneSnapshot\n      });\n\n      if (e.target === e.target.getStage()) {\n        _this.setState({\n          selectedAssetObject: ''\n        });\n\n        return;\n      }\n\n      var clickedOnTransformer = e.target.getParent().className === 'Transformer';\n\n      if (clickedOnTransformer) {\n        return;\n      }\n\n      var name = e.target.name();\n\n      _this.setState({\n        selectedAssetObject: name\n      });\n    };\n\n    _this.handlerDisplayAssetContextMenu = function (event, index) {\n      _this.props.onAssetContextMenuOpen(event, index);\n    };\n\n    _this.updateGridVerticalLines = function () {\n      var maxX = _this.state.creationBoardWidth,\n          maxY = _this.state.creationBoardHeight;\n      var step = 50;\n      var x = 0;\n      var verticalLines = [];\n\n      while (x <= maxX) {\n        verticalLines = verticalLines.concat([x, -1, x + step, -1, x + step, maxY + 1, x + step * 2, maxY + 1]);\n        x += step * 2;\n      }\n\n      _this.setState({\n        gridVerticalLines: verticalLines\n      });\n    };\n\n    _this.updateGridHorizontalLines = function () {\n      var maxX = _this.state.creationBoardWidth,\n          maxY = _this.state.creationBoardHeight;\n      var step = 50;\n      var y = 0;\n      var horizontalLines = [];\n\n      while (y <= maxY) {\n        horizontalLines = horizontalLines.concat([-1, y, -1, y + step, maxX + 1, y + step, maxX + 1, y + step * 2]);\n        y += step * 2;\n      }\n\n      _this.setState({\n        gridHorizontalLines: horizontalLines\n      });\n    };\n\n    _this.state = {\n      assetObjects: [],\n      selectedAssetObject: '',\n      windowWidth: 0,\n      windowHeight: 0,\n      creationBoardHeight: 0,\n      creationBoardWidth: 0,\n      characterWidth: 0,\n      characterHeight: 0,\n      characterX: 0,\n      characterY: 0,\n      x: 0,\n      y: 0,\n      assetContextMenuOpen: false,\n      assetContextMenuAnchorElement: null,\n      assetSelectedIndex: 0,\n      touched: false,\n      snapshot: \"\",\n      gridVerticalLines: [],\n      gridHorizontalLines: []\n    };\n    return _this;\n  }\n\n  _createClass(CreationBoard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.updateScreenDimensions();\n\n      window.onresize = function () {\n        _this2.updateScreenDimensions();\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var foreground = this.refs.foregroundLayer;\n      var stage = this.refs.theStage;\n      this.updateGridVerticalLines();\n      this.updateGridHorizontalLines();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _React$createElement;\n\n      var updatedCreationBoardWidth = this.state.creationBoardWidth,\n          updatedCreationBoardHeight = this.state.creationBoardHeight;\n      var objectList = this.props.objectList;\n      var touch = this.state.touched;\n      var verticalLines = this.state.gridVerticalLines;\n      var horizontalLines = this.state.gridHorizontalLines;\n      return React.createElement(Stage, (_React$createElement = {\n        width: updatedCreationBoardWidth,\n        height: updatedCreationBoardHeight,\n        className: \"Background-white\",\n        onMouseDown: this.handleStageMouseDown\n      }, _defineProperty(_React$createElement, \"className\", \"Konva-stage\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Rect, {\n        x: 0,\n        y: 0,\n        width: updatedCreationBoardWidth,\n        height: updatedCreationBoardHeight,\n        fill: this.props.backgroundSceneColor,\n        shadowBlur: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, objectList.map(function (item, index) {\n        return React.createElement(ObjectLoader, {\n          objectToLoad: item,\n          assetIndex: index,\n          touched: touch,\n          onPositionChange: _this3.handleAssetsPositionChange,\n          onTransformChange: _this3.handleAssetsTransformChange,\n          onAssetClicked: function onAssetClicked(event) {\n            return _this3.props.onAssetClicked(event, index);\n          },\n          key: item.image + \"--\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        });\n      })), this.props.showGrid && React.createElement(Line, {\n        points: verticalLines,\n        stroke: \"black\",\n        strokeWidth: 1,\n        dash: [4, 4],\n        closed: false,\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), this.props.showGrid && React.createElement(Line, {\n        points: horizontalLines,\n        stroke: \"black\",\n        strokeWidth: 2,\n        dash: [4, 4],\n        closed: false,\n        lineCap: \"round\",\n        lineJoin: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(TransformerComponent, {\n        selectedAssetObject: this.state.selectedAssetObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreationBoard;\n}(Component);\n\nexport default CreationBoard;","map":{"version":3,"sources":["/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/specific-components/CreationBoard.js"],"names":["React","Component","Grid","Stage","Layer","Text","Group","Image","Line","Rect","Circle","Ellipse","RegularPolygon","SCREEN_PARAMETERS","GEOMETRIC_FORMS","Konva","BaseCanvasKonvaImage","BaseCanvasKonvaAnimatedObject","TransformerComponent","ObjectLoader","img1","img2","img3","imageWidthHeightRatio","TRANSFORM_CHANGE","POSITION_CHANGE","stageSnapshot","CreationBoard","props","updateScreenDimensions","w","window","innerWidth","document","documentElement","clientWidth","body","h","innerHeight","clientHeight","ch","WIDTHPROPORTION","cw","HEIGHTPROPORTION","setState","windowWidth","windowHeight","creationBoardHeight","creationBoardWidth","handleDragStart","e","target","setAttrs","scaleX","scaleY","handleDragEnd","to","duration","easing","Easings","ElasticEaseOut","shadowOffsetX","shadowOffsetY","x","y","handleAssetsPositionChange","index","newProps","onAssetUpdated","touched","handleAssetsTransformChange","handleStageMouseDown","sceneSnapshot","getStage","toDataURL","onSceneUpdated","snapshot","selectedAssetObject","clickedOnTransformer","getParent","className","name","handlerDisplayAssetContextMenu","event","onAssetContextMenuOpen","updateGridVerticalLines","maxX","state","maxY","step","verticalLines","concat","gridVerticalLines","updateGridHorizontalLines","horizontalLines","gridHorizontalLines","assetObjects","characterWidth","characterHeight","characterX","characterY","assetContextMenuOpen","assetContextMenuAnchorElement","assetSelectedIndex","onresize","foreground","refs","foregroundLayer","stage","theStage","updatedCreationBoardWidth","updatedCreationBoardHeight","objectList","touch","backgroundSceneColor","map","item","onAssetClicked","image","showGrid"],"mappings":"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","sourcesContent":["/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Stage, Layer, Text, Group, Image, Line, Rect, Circle, Ellipse, RegularPolygon } from 'react-konva';\nimport { SCREEN_PARAMETERS, GEOMETRIC_FORMS } from '../Constants';\nimport Konva from 'konva';\n\nimport BaseCanvasKonvaImage from './BaseCanvasKonvaImage';\nimport BaseCanvasKonvaAnimatedObject from './BaseCanvasKonvaAnimatedObject';\nimport TransformerComponent from './TransformerComponent';\nimport ObjectLoader from './ObjectLoader';\n\nimport img1 from '../../images/animationTools/scenes/1.jpg';\nimport img2 from '../../images/animationTools/characters/gif.gif';\nimport img3 from '../../images/animationTools/characters/canvas.png';\n\nconst imageWidthHeightRatio = 0.707;\nconst TRANSFORM_CHANGE = \"Transform-change\";\nconst POSITION_CHANGE = \"Position-change\";\nvar stageSnapshot = null;\n\nclass CreationBoard extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      assetObjects: [],\n      selectedAssetObject: '',\n      windowWidth : 0,\n      windowHeight : 0,\n      creationBoardHeight : 0,\n      creationBoardWidth : 0,\n      characterWidth: 0,\n      characterHeight: 0,\n      characterX: 0,\n      characterY: 0,\n      x: 0,\n      y: 0,\n      assetContextMenuOpen: false,\n      assetContextMenuAnchorElement: null,\n      assetSelectedIndex: 0,\n      touched: false,\n      snapshot: \"\",\n      gridVerticalLines: [],\n      gridHorizontalLines: [],\n    };\n  }\n\n  componentWillMount(){\n    this.updateScreenDimensions();\n\n    window.onresize = () => {\n      this.updateScreenDimensions();\n    };\n  }\n\n  componentDidMount(){\n    var foreground = this.refs.foregroundLayer;\n    var stage = this.refs.theStage;\n    this.updateGridVerticalLines();\n    this.updateGridHorizontalLines();\n  }\n\n\n  updateScreenDimensions = () => {\n    var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n        h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n        ch = h*SCREEN_PARAMETERS.WIDTHPROPORTION,\n        cw = w*SCREEN_PARAMETERS.HEIGHTPROPORTION;\n    this.setState({\n      windowWidth : w,\n      windowHeight : h,\n      creationBoardHeight : ch,\n      creationBoardWidth : cw,\n    });\n  };\n\n  handleDragStart = e => {\n   e.target.setAttrs({\n     scaleX: 1.1,\n     scaleY: 1.1\n   });\n };\n\n handleDragEnd = e => {\n   e.target.to({\n     duration: 0.5,\n     easing: Konva.Easings.ElasticEaseOut,\n     scaleX: 1,\n     scaleY: 1,\n     shadowOffsetX: 5,\n     shadowOffsetY: 5\n   });\n   this.setState({\n     x: e.target.x(),\n     y: e.target.y(),\n   });\n\n };\n\n handleAssetsPositionChange = (index, newProps) => {\n    this.props.onAssetUpdated(index, newProps, POSITION_CHANGE);\n    this.setState({ touched: true });\n  };\n\nhandleAssetsTransformChange = (index, newProps) => {\n   this.props.onAssetUpdated(index, newProps, TRANSFORM_CHANGE);\n };\n\n handleStageMouseDown = e => {\n   var sceneSnapshot = e.target.getStage().toDataURL();\n   this.props.onSceneUpdated({snapshot:sceneSnapshot});\n\n    if (e.target === e.target.getStage()) {\n      this.setState({\n        selectedAssetObject: ''\n      });\n      return;\n    }\n\n    const clickedOnTransformer = e.target.getParent().className === 'Transformer';\n    if (clickedOnTransformer) {\n      return;\n    }\n\n    const name = e.target.name();\n    this.setState({\n      selectedAssetObject: name\n    });\n  };\n\n  handlerDisplayAssetContextMenu = (event, index) => {\n    this.props.onAssetContextMenuOpen(event, index);\n  };\n\n  updateGridVerticalLines = () => {\n    var maxX = this.state.creationBoardWidth,\n        maxY = this.state.creationBoardHeight;\n    var step = 50;\n    var x = 0;\n    var verticalLines = [];\n    while(x<=maxX){\n      verticalLines = verticalLines.concat([x,-1, x+step,-1, x+step,maxY+1, x+step*2,maxY+1]);\n      x += step*2;\n    }\n    this.setState({\n      gridVerticalLines: verticalLines,\n    });\n  };\n\n  updateGridHorizontalLines = () => {\n    var maxX = this.state.creationBoardWidth,\n        maxY = this.state.creationBoardHeight;\n    var step = 50;\n    var y = 0;\n    var horizontalLines = [];\n    while(y<=maxY){\n      horizontalLines = horizontalLines.concat([-1,y, -1,y+step, maxX+1,y+step, maxX+1,y+step*2]);\n      y += step*2;\n    }\n    this.setState({\n      gridHorizontalLines: horizontalLines,\n    });\n  };\n\n  render(){\n    var updatedCreationBoardWidth = this.state.creationBoardWidth,\n        updatedCreationBoardHeight = this.state.creationBoardHeight;\n    const objectList = this.props.objectList;\n    const touch = this.state.touched;\n    const verticalLines = this.state.gridVerticalLines;\n    const horizontalLines = this.state.gridHorizontalLines;\n\n    return(\n      <Stage width={updatedCreationBoardWidth} height={updatedCreationBoardHeight} className=\"Background-white\"\n             onMouseDown={this.handleStageMouseDown} className=\"Konva-stage\">\n\n        <Layer>\n          <Rect\n           x={0}\n           y={0}\n           width={updatedCreationBoardWidth}\n           height={updatedCreationBoardHeight}\n           fill={this.props.backgroundSceneColor}\n           shadowBlur={0}\n         />\n\n          <Group >\n            {objectList.map( (item, index) => (\n                <ObjectLoader objectToLoad={item}\n                              assetIndex={index}\n                              touched={touch}\n                              onPositionChange={this.handleAssetsPositionChange}\n                              onTransformChange={this.handleAssetsTransformChange}\n                              onAssetClicked={event => this.props.onAssetClicked(event, index)}\n                              key={item.image+\"--\"+index} />\n            ))}\n            </Group>\n\n            {this.props.showGrid && <Line points={verticalLines}\n                  stroke=\"black\"\n                  strokeWidth={1}\n                  dash={[4, 4]}\n                  closed={false}\n                  lineCap=\"round\"\n                  lineJoin=\"round\"/>}\n            {this.props.showGrid && <Line points={horizontalLines}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  dash={[4, 4]}\n                  closed={false}\n                  lineCap=\"round\"\n                  lineJoin=\"round\"/>}\n          <TransformerComponent selectedAssetObject={this.state.selectedAssetObject} />\n        </Layer>\n      </Stage>\n    );\n  }\n}\n\nexport default CreationBoard;\n"]},"metadata":{},"sourceType":"module"}