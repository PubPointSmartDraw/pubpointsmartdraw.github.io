{"ast":null,"code":"import _classCallCheck from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/ControlBar.js\";\n\n/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Modal from '@material-ui/core/Modal';\nimport AnimationPlayer from './specific-components/AnimationPlayer';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ColorPicker from 'material-ui-color-picker';\nimport { ColorLens } from '@material-ui/icons';\nimport play from '../images/icons/play.png';\nimport grid from '../images/icons/grid.png';\nimport zoomout from '../images/icons/zoom-out.png';\nimport zoomin from '../images/icons/zoom-in.png';\nvar counter = 0;\n/**\n* Composant responsable de la gestion des boutons d'action situés en dessous de la zone de création.\n*/\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ControlBar, _Component);\n\n  /**\n  * Variable d'état du composant.\n  */\n\n  /**\n  * Constructeur du composant.\n  * @constructor\n  */\n  function ControlBar(props) {\n    var _this;\n\n    _classCallCheck(this, ControlBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ControlBar).call(this, props));\n    _this.state = {\n      openPlayWindow: false\n    };\n\n    _this.handleOpenPlayWindow = function () {\n      _this.setState({\n        openPlayWindow: true\n      });\n    };\n\n    _this.handleClosePlayWindow = function () {\n      _this.setState({\n        openPlayWindow: false\n      });\n    };\n\n    _this.handleClickGrid = function () {\n      _this.props.onShowGridClicked();\n    };\n\n    _this.handleClickZoomout = function () {};\n\n    _this.handleClickZoomin = function () {};\n\n    _this.state = {\n      openPlayWindow: false\n    };\n    return _this;\n  }\n  /**\n  * Gestionnaire de l'ouverture de la fenêtre modale de prévisualisation de la scène.\n  */\n\n\n  _createClass(ControlBar, [{\n    key: \"render\",\n\n    /**\n    * Affiche les éléments d'interface du composant.\n    */\n    value: function render() {\n      var _this2 = this;\n\n      var objectList = this.props.objectList; //console.log(this.props.backgroundSceneColor);\n\n      return React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        sm: 11,\n        container: true,\n        className: \"Control-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: \"Float-left Padding-none Color-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Grille\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"Menu-icon\",\n        onClick: this.handleClickGrid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: \"Grille\",\n        className: \"Small-icon\",\n        src: grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })))), React.createElement(Toolbar, {\n        className: \"Parent-align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Lire la sc\\xE8ne\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"Menu-icon\",\n        onClick: this.handleOpenPlayWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        alt: \"Lire\",\n        src: play,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })))), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        className: \"Color-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Arri\\xE8re plan\"), React.createElement(Input, {\n        onChange: function onChange(event) {\n          return _this2.props.onSceneBackgroundUpdated({\n            backgroundColor: event.target.value\n          });\n        },\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(ColorLens, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })),\n        className: \"Color-white Cursor-pointer\",\n        placeholder: \"green/#00FF00\",\n        value: this.props.backgroundSceneColor,\n        type: \"color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        open: this.state.openPlayWindow,\n        onClose: this.handleClosePlayWindow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: \"Screen-player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(AnimationPlayer, {\n        objectList: objectList,\n        backgroundSceneColor: this.props.backgroundSceneColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ControlBar;\n}(Component);\n\nexport default ControlBar;","map":{"version":3,"sources":["/media/audric/Data/Document/PubPoint/dev/sources/React/PubPointSmartDraw/finalApp/pubpointsmartdraw/src/pubpoint-studio/components/ControlBar.js"],"names":["React","Component","Grid","Toolbar","Tooltip","Avatar","Modal","AnimationPlayer","Paper","FormControl","Input","InputLabel","TextField","InputAdornment","ColorPicker","ColorLens","play","grid","zoomout","zoomin","counter","ControlBar","props","state","openPlayWindow","handleOpenPlayWindow","setState","handleClosePlayWindow","handleClickGrid","onShowGridClicked","handleClickZoomout","handleClickZoomin","objectList","event","onSceneBackgroundUpdated","backgroundColor","target","value","backgroundSceneColor"],"mappings":"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","sourcesContent":["/*****************************************************************************\n *\n * PubPoint Smart Draw Web application\n *\n * Developed for PubPoint Strategy by Eng. FEUYAN TCHOUO\n *\n * Copyright (C) PubPoint Strategy - All rights reserved.\n * Unauthorized copying of this file, via any medium is strictly prohibited.\n * Proprietary and confidential.\n * Written by FEUYAN TCHOUO <tca1audricfeuyan@gmail.com>, November 2018.\n *\n *****************************************************************************\n */\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Modal from '@material-ui/core/Modal';\nimport AnimationPlayer from './specific-components/AnimationPlayer';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ColorPicker from 'material-ui-color-picker';\nimport {ColorLens} from '@material-ui/icons';\n\nimport play from '../images/icons/play.png';\nimport grid from '../images/icons/grid.png';\nimport zoomout from '../images/icons/zoom-out.png';\nimport zoomin from '../images/icons/zoom-in.png';\nvar counter = 0;\n\n/**\n* Composant responsable de la gestion des boutons d'action situés en dessous de la zone de création.\n*/\nclass ControlBar extends Component {\n  /**\n  * Variable d'état du composant.\n  */\n  state = {\n    openPlayWindow: false,\n  };\n\n  /**\n  * Constructeur du composant.\n  * @constructor\n  */\n  constructor(props) {\n    super(props);\n    this.state = {\n      openPlayWindow: false,\n    };\n  }\n\n  /**\n  * Gestionnaire de l'ouverture de la fenêtre modale de prévisualisation de la scène.\n  */\n  handleOpenPlayWindow = () => {\n     this.setState({ openPlayWindow: true });\n   };\n   /**\n   * Gestionnaire de la fermeture de la fenêtre de prévisualisation de la vidéo.\n   */\n    handleClosePlayWindow = () => {\n      this.setState({ openPlayWindow: false });\n    };\n   /**\n   * Gestionnaire de l'affichage des grilles sur la zone de création.\n   */\n  handleClickGrid = () => {\n    this.props.onShowGridClicked();\n  };\n  /**\n  * Gestionnaire du zoom de la zone de création.\n  */\n  handleClickZoomout = () => {\n\n  };\n  /**\n  * Gestionnaire de dézoom de la zone de création.\n  */\n  handleClickZoomin = () => {\n\n  };\n\n   /**\n   * Affiche les éléments d'interface du composant.\n   */\n  render() {\n    const objectList = this.props.objectList;\n    //console.log(this.props.backgroundSceneColor);\n    return (\n      <Grid item xs={11} sm={11} container className=\"Control-bar\">\n        <Toolbar className=\"Float-left Padding-none Color-white\">\n          <Tooltip title=\"Grille\">\n            <a className=\"Menu-icon\" onClick={this.handleClickGrid}>\n              <Avatar alt=\"Grille\" className=\"Small-icon\"\n                      src={grid}>\n              </Avatar>\n            </a>\n          </Tooltip>\n          {/*<Tooltip title=\"Réduire\">\n            <a className=\"Menu-icon\" onClick={this.handleClickZoomout}>\n              <Avatar alt=\"Réduire\" className=\"Small-icon\"\n                      src={zoomout}>\n              </Avatar>\n            </a>\n          </Tooltip>\n          <Tooltip title=\"Réduire\">\n            <a className=\"Menu-icon\" onClick={this.handleClickZoomin}>\n              <Avatar alt=\"Agrandir\" className=\"Small-icon\"\n                      src={zoomin}>\n              </Avatar>\n            </a>\n          </Tooltip>*/}\n        </Toolbar>\n\n        <Toolbar className=\"Parent-align-center\">\n          <Tooltip title=\"Lire la scène\">\n            <a className=\"Menu-icon\" onClick={this.handleOpenPlayWindow}>\n              <Avatar alt=\"Lire\"\n                      src={play}>\n              </Avatar>\n            </a>\n          </Tooltip>\n        </Toolbar>\n\n        <FormControl>\n          <InputLabel className=\"Color-white\">Arrière plan</InputLabel>\n          <Input\n            onChange={event => this.props.onSceneBackgroundUpdated({backgroundColor: event.target.value})}\n            startAdornment={<InputAdornment position=\"start\"><ColorLens /></InputAdornment>}\n            className=\"Color-white Cursor-pointer\"\n            placeholder=\"green/#00FF00\"\n            value={this.props.backgroundSceneColor}\n            type=\"color\"\n          />\n        </FormControl>\n\n        <Modal\n          open={this.state.openPlayWindow}\n          onClose={this.handleClosePlayWindow}\n        >\n          <Paper className=\"Screen-player\">\n            <AnimationPlayer objectList={objectList}\n                             backgroundSceneColor={this.props.backgroundSceneColor}/>\n          </Paper>\n        </Modal>\n      </Grid>\n    );\n  }\n}\n\nexport default ControlBar;\n"]},"metadata":{},"sourceType":"module"}